name: Pipeline

on:
  push:
    paths:
      - 'release-notes/**/*.pdf'

env:
  version: ${{ github.event.head_commit.message }}
  filename: Delius Service Team ND ${{ github.event.head_commit.message }} Release Notes.pdf

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      rbac_version: ${{ steps.get_rbac_version.outputs.rbac_version }}
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install pdftohtml

      - name: Get release note
        id: pdf
        run: echo "filename=$(find release-notes -name "$filename")" | tee -a $GITHUB_OUTPUT
        env:
          filename: ${{ env.filename }}

      - name: PDF to HTML
        run: pdftohtml -enc UTF-8 -noframes -nomerge "$pdf_filename" release_notes.html
        env:
          pdf_filename: ${{ steps.pdf.outputs.filename }}

      - name: HTML to Markdown
        uses: docker://pandoc/core:2.19
        with:
          args: --ascii --from html --to markdown --output release_notes.raw.md release_notes.html

      - name: Tidy up formatting
        run: |
          cat release_notes.raw.md \
          | tail -n+5 \
          | sed '/^Page/d' \
          | sed '/^---/d' \
          | sed 's/\\]&nbsp;\*\*/\]** /' \
          | awk '/^\*\*/{if (x)print x;x="";}{x=(!x)?$0:x" "$0;}END{print x;}' \
          | sed 's/\\ $//' > release_notes.md
          cat release_notes.md

      - name: Get RBAC version
        id: get_rbac_version
        run: awk -F'=' "/^${commit_message}=/ { print "'"'"rbac_version="'"'" \$2 }" rbac-versions.txt >> $GITHUB_OUTPUT
        env:
          commit_message: ${{ github.event.head_commit.message }}

      - name: Create GitHub release
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844 # v0.1.15
        with:
          body_path: release_notes.md
          files: ${{ steps.pdf.outputs.filename }}
          name: ${{ github.event.head_commit.message }}
          tag_name: v${{ github.event.head_commit.message }}

  delius-mis-dev:
    uses: ./.github/workflows/deploy-mp.yml
    needs: release
    with:
      environment: delius-mis-dev
      environment_url: https://ndelius.mis-dev.probation.service.justice.gov.uk/
      version: ${{ github.event.head_commit.message }}
      rbac_version: ${{ needs.release.outputs.rbac_version }}
    secrets: inherit

  test:
    uses: ./.github/workflows/deploy-mp.yml
    needs:
      - release
    with:
      environment: delius-test
      environment_url: https://ndelius.test.probation.service.justice.gov.uk/
      version: ${{ github.event.head_commit.message }}
      rbac_version: ${{ needs.release.outputs.rbac_version }}
    secrets: inherit

  serenity-tests:
    if: false # Disabled until NDST/Version1 are happy to run the end-to-end tests as part of the pipeline
    runs-on: ubuntu-latest
    needs: test
    timeout-minutes: 60
    continue-on-error: true
    steps:
      - uses: aws-actions/configure-aws-credentials@5727f247b64f324ec403ac56ae05e220fd02b65f # v2.1.0
        with:
          aws-region: eu-west-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN_FOR_SERENITY_TESTS }}
          role-skip-session-tagging: true
          role-duration-seconds: 3600
          mask-aws-account-id: false
      - name: Run tests
        uses: aws-actions/aws-codebuild-run-build@d5a04846cedab61a0b7c897af0548af0d8fb14fb # v1.0.12
        with:
          project-name: del-test-delius-serenity-tests-build
          disable-source-override: true

  stage:
    uses: ./.github/workflows/deploy.yml
    needs:
      - release
    with:
      environment: delius-stage
      environment_url: https://ndelius.stage.probation.service.justice.gov.uk/
      version: ${{ github.event.head_commit.message }}
      rbac_version: ${{ needs.release.outputs.rbac_version }}
    secrets: inherit

  performance-tests:
    if: false # Disabled until NDST/Version1 are happy to run the performance tests as part of the pipeline
    runs-on: ubuntu-latest
    needs: stage
    timeout-minutes: 60
    steps:
      - uses: aws-actions/configure-aws-credentials@5727f247b64f324ec403ac56ae05e220fd02b65f # v2.1.0
        with:
          aws-region: eu-west-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN_FOR_PERFORMANCE_TESTS }}
          role-skip-session-tagging: true
      - name: Run tests
        uses: aws-actions/aws-codebuild-run-build@d5a04846cedab61a0b7c897af0548af0d8fb14fb # v1.0.12
        with:
          project-name: del-stage-delius-performance-tests-build
          disable-source-override: true
          env-vars-for-codebuild: CONCURRENT_USERS,DURATION
        env:
          CONCURRENT_USERS: 160
          DURATION: 3600 # 1 hour

  pre-prod:
    uses: ./.github/workflows/deploy.yml
    needs:
      - release
      - test
#      - serenity-tests
#      - performance-tests
    with:
      environment: delius-pre-prod
      environment_url: https://ndelius.pre-prod.delius.probation.hmpps.dsd.io/
      version: ${{ github.event.head_commit.message }}
      rbac_version: ${{ needs.release.outputs.rbac_version }}
    secrets: inherit

  training:
    uses: ./.github/workflows/deploy.yml
    needs:
      - release
      - test
#      - serenity-tests
#      - performance-tests
    with:
      environment: delius-training
      environment_url: https://ndelius.training.probation.service.justice.gov.uk/
      version: ${{ github.event.head_commit.message }}
      rbac_version: ${{ needs.release.outputs.rbac_version }}
    secrets: inherit

  complete:
    runs-on: ubuntu-latest
    needs: 
      - pre-prod
      - training
    steps:
      - run: echo Pipeline complete!
