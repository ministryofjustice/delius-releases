name: Deploy

on:
  # Allow a deployment to be started from the pipeline
  workflow_call:
    inputs:
      version:
        description: Delius version
        type: string
        required: true
      rbac_version:
        description: RBAC version
        type: string
        required: false
      environment:
        description: Environment
        type: string
        required: true
      environment_url:
        description: URL
        type: string
        required: false
        default: ''
  # Allow a deployment to be started from the UI
  workflow_dispatch:
    inputs:
      version:
        description: Delius version
        type: string
        required: true
      rbac_version:
        description: RBAC version
        type: string
        required: false
      environment:
        description: Environment
        type: environment
        required: true
      environment_url:
        description: Environment URL (optional)
        type: string
        required: false
        default: ''

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    environment:
      name: ${{ inputs.environment }}
      url: ${{ inputs.environment_url }}
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/configure-aws-credentials@5727f247b64f324ec403ac56ae05e220fd02b65f # v2.1.0
        with:
          aws-region: eu-west-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-skip-session-tagging: true
          role-duration-seconds: 3600
          mask-aws-account-id: false

      - name: Update configuration
        id: config
        shell: bash
        run: ./.github/workflows/update-env-config.sh
        env:
          environment: ${{ inputs.environment }}
          rbac_version: ${{ inputs.rbac_version }}
          version: ${{ inputs.version }}
          token: ${{ secrets.EXT_GITHUB_TOKEN }}

      - name: Start automation
        id: start_automation
        if: steps.config.outputs.version_changed == 'true' || github.event_name == 'workflow_dispatch' # only deploy if version changed, or if started manually
        shell: bash
        run: |
          # start the execution
          execution=$(aws ssm start-automation-execution --document-name "${short_environment_name}-Delius-DeployApplication" --region eu-west-2)
          execution_id=$(echo "$execution" | jq -r '.AutomationExecutionId')
          echo "execution_id=$execution_id" | tee -a $GITHUB_OUTPUT

          # output useful links
          echo "Execution started. Check the status in AWS Systems Manager: https://eu-west-2.console.aws.amazon.com/systems-manager/automation/execution/${execution_id}?region=eu-west-2"
          while [ -z "$codebuild_link" ]; do codebuild_link=$(aws ssm get-automation-execution --automation-execution-id "$execution_id" --query "AutomationExecution.StepExecutions[?StepName == 'OutputBuildDetails'].Outputs.CodeBuildLink[]" --output text); sleep 1; done
          echo "View the logs in AWS CodeBuild: $codebuild_link"
        env:
          short_environment_name: ${{ steps.config.outputs.short_environment_name }}

      - name: Wait for automation to complete
        id: wait_for_automation
        if: steps.config.outputs.version_changed == 'true' || github.event_name == 'workflow_dispatch' # only deploy if version changed, or if started manually
        shell: bash
        run: |
          # output useful links
          echo "Execution started. Check the status in AWS Systems Manager: https://eu-west-2.console.aws.amazon.com/systems-manager/automation/execution/${execution_id}?region=eu-west-2"
          while [ -z "$codebuild_link" ]; do codebuild_link=$(aws ssm get-automation-execution --automation-execution-id "$execution_id" --query "AutomationExecution.StepExecutions[?StepName == 'OutputBuildDetails'].Outputs.CodeBuildLink[]" --output text); sleep 1; done
          echo "View the logs in AWS CodeBuild: $codebuild_link"

          # wait for the execution to complete
          status="Started"
          start_time=$SECONDS
          while [ "$status" != "Success" -a "$status" != "Failed" -a "$status" != "TimedOut" -a "$status" != "Cancelled" ]; do
            status=$(aws ssm get-automation-execution --automation-execution-id "$execution_id" --query 'AutomationExecution.AutomationExecutionStatus' --output text)
            sleep 1
          done

          # output the summary
          echo Execution completed. Status: $status
          duration=$(( SECONDS - start_time ))
          status_icon=$(test "$status" == "Success" && echo ':white_check_mark:' || echo ':x:')
          echo '### Deployment Complete' >> $GITHUB_STEP_SUMMARY
          echo "| Environment | $environment |" >> $GITHUB_STEP_SUMMARY
          echo '| :--- | :--- |' >> $GITHUB_STEP_SUMMARY
          echo "| Status | $status_icon $status |" >> $GITHUB_STEP_SUMMARY
          echo "| Duration | :stopwatch: $((duration/60))m $((duration%60))s |" >> $GITHUB_STEP_SUMMARY
          echo "| Logs | :memo: [View the logs in AWS CodeBuild]($codebuild_link) |" >> $GITHUB_STEP_SUMMARY

          # check the status
          test "$status" == "Success"
        env:
          environment: ${{ inputs.environment }}
          execution_id: ${{ steps.start_automation.outputs.execution_id }}

      - name: Revert version on failure
        if: always() && steps.config.outputs.version_changed == 'true' && (steps.start_automation.outcome == 'failure' || steps.wait_for_automation.outcome == 'failure')
        working-directory: env_configs
        shell: bash
        run: |
          sed -i 's/^ndelius_version:.*/ndelius_version: "$current_version"/' '$environment/ansible/group_vars/all.yml'
          git commit -m "Rollback Delius v$version in $environment" \
                     -m 'This was triggered by an automated deployment from https://github.com/ministryofjustice/delius-releases' \
                     "$environment/ansible/group_vars/all.yml"
          git push
        env:
          environment: ${{ inputs.environment }}
          execution_id: ${{ steps.start_automation.outputs.execution_id }}
          current_version: ${{ steps.config.outputs.current_version }}
          version: ${{ inputs.version }}

      - name: Run smoke tests
        uses: aws-actions/aws-codebuild-run-build@d5a04846cedab61a0b7c897af0548af0d8fb14fb # v1.0.12
        with:
          project-name: ${{ steps.config.outputs.short_environment_name }}-delius-smoke-tests-build
          disable-source-override: true
